@startuml

package インフラ {
  class sqlite3
}

package CRCライブラリ {
  package CRCインタフェース {
    class CRC値 {
      + 0-65535の整数値
    }
    interface CRCアルゴリズム {
      + CRC生成(前のCRC値:CRC値, 入力データ:byte): CRC値
      + 逆探索(CRC値:CRC値, 入力データ:byte): CRC値
    }
    CRCアルゴリズム .r.> CRC値
  }

  package CRC実装 {
    class CRCアルゴリズムsqlite実装 implements CRCアルゴリズム {
    }
    class CRCアルゴリズムオンメモリ実装 implements CRCアルゴリズム {
    }
    class CRCアルゴリズムオンメモリ実装
    note bottom: 仕様ドキュメント用途。またsqlite実装のシーディングに使える

    CRCアルゴリズムsqlite実装 ..> sqlite3
  }
}

package 復活の呪文ドメイン {
  package 復活の呪文インタフェース {
    package ゲームステート {
      class ゲームステート {
        + ローレシア王子の名前
        + 所持金額
        + 月の欠片使用
        + 水門解錠
        + 羽衣作成
        + 命の紋章
        + 水の紋章
        + 月の紋章
        + 星の紋章
        + 太陽の紋章
        + 船入手震度
        + サマルトリア王子加入震度
        + 仲間加入状況
      }

      class メンバーステート {
        + 持ち物とか
      }

      ゲームステート o-r->"3" メンバーステート
    }

    class 復活の呪文 {
      + 初期CRC値: CRC値
    }

    class 暗号化キー {
      + 0-15の整数値
    }

    interface 復活の呪文コーデック {
      + エンコード(ゲームステート:ゲームステート, 暗号化キー:暗号化キー): 復活の呪文
      + デコード(復活の呪文:復活の呪文): [ゲームステート, 暗号化キー]
    }
  }

  package 復活の呪文実装 {
    package ゲームステート実装 {
      class ゲームステートシリアライザ {
        シリアライズ(ゲームステート:ゲームステート): byte[]
        デシリアライズ(バイト列: byte[]): ゲームステート
      }
    }

    class 復活の呪文コーデック実装 implements 復活の呪文コーデック

    復活の呪文コーデック ..> 復活の呪文
    復活の呪文コーデック ..> 暗号化キー
    復活の呪文コーデック ..> ゲームステート

    復活の呪文コーデック実装 -d-> ゲームステートシリアライザ
    復活の呪文コーデック実装 -d-> CRCアルゴリズム
  }
}

package ユースケース {
  package 復活の呪文探索 {
    class 復活の呪文を探索する {
      do(復活の呪文探索条件: 復活の呪文探索条件): 復活の呪文[]
    }

    class 復活の呪文探索条件 {
      初期CRC値: 初期CRC値
      ベースのゲームステート: ゲームステート
      変えてもよい条件
    }

    class 探索条件を摂動させる {
      do(ベースのゲームステート: ゲームステート, 変えてもよい条件): ゲームステート
    }

    復活の呪文を探索する -d-> 探索条件を摂動させる

    復活の呪文を探索する ..> 復活の呪文探索条件
    復活の呪文探索条件 o-d-> CRC値
    復活の呪文探索条件 o-d-> ゲームステート

    復活の呪文を探索する -d-> 復活の呪文コーデック
  }
}

@enduml
